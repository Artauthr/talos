buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.ajoberstar.grgit:grgit-gradle:3.1.1"
    }
}

plugins {
    id 'java-library'
    alias(libs.plugins.lombok)
}

apply plugin: "org.ajoberstar.grgit"

dependencies {

    api libs.bongo.engine
    api project(":runtimes:talos-bongo")

    api libs.visui

    implementation libs.string.similarity

    implementation libs.spine.libgdx

    implementation libs.snakeyaml

    implementation libs.tiny.gizmo
    implementation libs.spark

}


sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["assets"]




def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

task createProperties () {
    doFirst {

        def file = rootProject.file("editor/assets/talos-version.properties");
        Properties properties = new Properties();
        if (file.exists()) {
            properties.load(file.newReader());
        }
        properties.setProperty("version", project.version);
        properties.setProperty("buildHash", getGitHash());
        properties.setProperty("buildTime", System.currentTimeMillis() + "");

        properties.store(file.newPrintWriter(), "");
    }
}

classes {
    dependsOn createProperties
}

task packageSources(type: Jar, dependsOn: classes) {
    from delombok
    from sourceSets.main.resources.srcDirs
    archiveClassifier = 'web'
}

configurations {
    web {
        canBeConsumed true
        canBeResolved false
        extendsFrom implementation, runtimeOnly
    }
}

artifacts {
    web(packageSources)
}

class TalosBuildInfo {
    def versionString
    def buildHash
    def branch
    def commit
    def date

    TalosBuildInfo (def project, def grgit) {
        def versionPropsFile = project.file('assets/talos-version.properties')

        def Properties versionProps = new Properties()

        def inputStream = new FileInputStream(versionPropsFile)
        versionProps.load(inputStream)
        inputStream.close()

        this.versionString = versionProps['version']
        this.buildHash = versionProps['buildHash']

        this.commit = grgit.head().abbreviatedId
        this.branch = grgit.branch.current().getName()
        this.date = Long.valueOf(versionProps['buildTime'])
    }

    def print () {
        println "${this.versionString} ${this.commit} ${this.branch} ${this.date}"
    }
}

def getBuildInfo () {
    def buildInfo = new TalosBuildInfo(project, grgit)
    return buildInfo
}
