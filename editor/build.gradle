dependencies {
    implementation project(":runtimes:talos-libgdx")
    api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    implementation "info.debatty:java-string-similarity:1.2.1"

}

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]

sourceSets.main.resources.srcDirs = ["assets"]

project.ext.mainClassName = "com.rockbite.tools.talos.TalosLauncher"
project.ext.assetsDir = new File("assets")


task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

task distLegacyTest(type: Jar) {
    manifest {
        attributes 'Main-Class': "com.rockbite.tools.talos.test.LegacyCompareTest"
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

dist.dependsOn classes
